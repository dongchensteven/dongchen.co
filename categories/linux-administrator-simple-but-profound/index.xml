<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux Administrator: Simple But Profound on Dong - A place to track my time log</title>
    <link>https://dongchen.co/categories/linux-administrator-simple-but-profound/</link>
    <description>Recent content in Linux Administrator: Simple But Profound on Dong - A place to track my time log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Apr 2019 20:13:56 +1300</lastBuildDate>
    
	<atom:link href="https://dongchen.co/categories/linux-administrator-simple-but-profound/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>62. RAID - Redundant Array of Independent Disks</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/62.-raid-redundant-array-of-independent-disks/</link>
      <pubDate>Wed, 03 Apr 2019 20:13:56 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/62.-raid-redundant-array-of-independent-disks/</guid>
      <description>&lt;p&gt;With RAID technology, we can combine multiple disks in some way to improve performance or reliability.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>61. Disk Management - Tools</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/61.-disk-management-tools/</link>
      <pubDate>Tue, 02 Apr 2019 07:52:07 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/61.-disk-management-tools/</guid>
      <description>&lt;p&gt;Linux provides us with a lot of tools to manage disks. These tools allow us to view disk usage and partition the drive.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>60. Disk Management - Concept</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/60.-disk-management-concept/</link>
      <pubDate>Mon, 01 Apr 2019 18:48:38 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/60.-disk-management-concept/</guid>
      <description>&lt;p&gt;Data is the most critical thing in the system, and the disk is the necessary hardware device to persist the data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>59. Advanced Text Processing - Awk&#39;s Basic Usage</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/59.-advanced-text-processing-awks-basic-usage/</link>
      <pubDate>Sun, 31 Mar 2019 08:48:54 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/59.-advanced-text-processing-awks-basic-usage/</guid>
      <description>&lt;p&gt;Awk is a flexible pattern matching, text processing and line-oriented language, Linux provides us with an implementation version of it, gawk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>58. Advanced Text Processing - Stream Editor (sed)</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/58.-advanced-text-processing-stream-editor-sed/</link>
      <pubDate>Sat, 30 Mar 2019 09:25:59 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/58.-advanced-text-processing-stream-editor-sed/</guid>
      <description>&lt;p&gt;We can use the sed stream editor provided by linux to filter and convert text line by line.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>57. Advanced Text Processing - grep, egrep</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/57.-advanced-text-processing-grep-egrep/</link>
      <pubDate>Fri, 29 Mar 2019 07:22:38 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/57.-advanced-text-processing-grep-egrep/</guid>
      <description>&lt;p&gt;We can use the grep tool provided by linux to find matching rows based on either the basic or extended regular expressions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>56. Advanced Text Editor - Vim&#39;s Visual and Input Mode</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/56.-advanced-text-editor-vims-visual-and-input-mode/</link>
      <pubDate>Thu, 28 Mar 2019 07:54:50 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/56.-advanced-text-editor-vims-visual-and-input-mode/</guid>
      <description>&lt;p&gt;In addition to the last line mode and edit mode, vim also provides us with two other modes: view mode for copying, pasting, deleting selected content, and insert mode to add and delete text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>55. Advanced Text Editor - Vim&#39;s Edit Mode</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/55.-advanced-text-editor-vims-edit-mode/</link>
      <pubDate>Wed, 27 Mar 2019 06:26:32 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/55.-advanced-text-editor-vims-edit-mode/</guid>
      <description>&lt;p&gt;In addition to last line mode, vim also has edit mode, both of which complement each other.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>54. Advanced Text Editor - Vim&#39;s Last Line Mode</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/54.-advanced-text-editor-vims-last-line-mode/</link>
      <pubDate>Tue, 26 Mar 2019 07:57:47 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/54.-advanced-text-editor-vims-last-line-mode/</guid>
      <description>&lt;p&gt;Through the last line mode of vim, we can easily execute some commands, such as switching between files, saving files, moving the cursor, deleting and replacing text and so on.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>53. Advanced Text Editor - Vim&#39;s Common Usage</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/53.-advanced-text-editor-vims-common-usage/</link>
      <pubDate>Mon, 25 Mar 2019 07:38:39 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/53.-advanced-text-editor-vims-common-usage/</guid>
      <description>&lt;p&gt;The Vim text editor provides instructions that make it easy for us to operate, through which we can open files in a variety of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>52. Find Utilities - Advanced Files Searching</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/52.-find-utilities-advanced-files-searching/</link>
      <pubDate>Sun, 24 Mar 2019 09:12:59 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/52.-find-utilities-advanced-files-searching/</guid>
      <description>&lt;p&gt;The find command provides some useful options for finding files or directories based on creation time, modification time, owner, group, permissions, type, size, etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>51. File Permissions - File Attributes</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/51.-file-permissions-file-attributes/</link>
      <pubDate>Sat, 23 Mar 2019 07:13:22 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/51.-file-permissions-file-attributes/</guid>
      <description>&lt;p&gt;To make our files more secure, Linux provides a feature called file attribute. By configuring the attributes of the file, we can specify whether it is read-only or undeleted, or in other statuses.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>50. File Permissions - Filesystem Access Control List</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/50.-file-permissions-filesystem-access-control-list/</link>
      <pubDate>Fri, 22 Mar 2019 06:48:25 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/50.-file-permissions-filesystem-access-control-list/</guid>
      <description>&lt;p&gt;Although the chmod command is powerful enough, it cannot assign permissions more finely, so Linux provides some flexible commands to specify permissions for a particular user or group. Starting from Linux kernel 2.6, we can allocate more granular permissions to users or groups.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>49. User Management - su, sudo</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/49.-user-management-su-sudo/</link>
      <pubDate>Thu, 21 Mar 2019 07:54:32 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/49.-user-management-su-sudo/</guid>
      <description>&lt;p&gt;We can switch between users through the su and sudo commands. Also, we can use these two commands to perform certain command operations with the privileges of other users.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>48. User Management - Communications Between Users</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/48.-user-management-communications-between-users/</link>
      <pubDate>Wed, 20 Mar 2019 04:40:29 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/48.-user-management-communications-between-users/</guid>
      <description>&lt;p&gt;Linux provides users with tools to communicate with each other. Some can send messages to a specified user; some can send a group of messages; some can even send content as an email to a user&amp;rsquo;s inbox list.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>47. User Management - Login Details &amp; Record</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/47.-user-management-login-details-record/</link>
      <pubDate>Tue, 19 Mar 2019 08:19:58 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/47.-user-management-login-details-record/</guid>
      <description>&lt;p&gt;Linux provides some commands to view the user: login status, login record, login attempt log, user last login log and so on.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>46. User Management - Creation, Modification and Deletion</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/46.-user-management-creation-modification-and-deletion/</link>
      <pubDate>Mon, 18 Mar 2019 20:03:45 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/46.-user-management-creation-modification-and-deletion/</guid>
      <description>&lt;p&gt;To make it easier to manage users, linux provides some common commands that allow you to add, delete, and modify users in a more standardized way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>45. Group Management - Creation, Modification and Deletion</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/45.-group-management-creation-modification-and-deletion/</link>
      <pubDate>Sun, 17 Mar 2019 09:16:36 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/45.-group-management-creation-modification-and-deletion/</guid>
      <description>&lt;p&gt;To make it easier to manage groups, linux provides some common commands that allow you to add, delete, and modify groups in a more standardized way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>44. File Permissions - chown, chgrp, chmod, umask</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/44.-file-permissions-chown-chgrp-chmod-umask/</link>
      <pubDate>Sat, 16 Mar 2019 06:24:51 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/44.-file-permissions-chown-chgrp-chmod-umask/</guid>
      <description>&lt;p&gt;In order to make it easier to manage user and group permissions on files and directories, linux provides some common commands that can assign and reclaim permissions to users and groups in a more standardized way.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>43. File Permissions - Symbolic &amp; Numeric Modes, Setuid &amp; Setgid</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/43.-file-permissions-symbolic-numeric-modes-setuid-setgid/</link>
      <pubDate>Fri, 15 Mar 2019 07:20:11 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/43.-file-permissions-symbolic-numeric-modes-setuid-setgid/</guid>
      <description>&lt;p&gt;We can determine the permissions of a file by looking at the mode bits of that file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>42. User Information - IDs, Group IDs, Names, and so on</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/42.-user-information-ids-group-ids-names-and-so-on/</link>
      <pubDate>Thu, 14 Mar 2019 07:43:04 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/42.-user-information-ids-group-ids-names-and-so-on/</guid>
      <description>&lt;p&gt;The Linux core toolset provides us with some commands to view user-related information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>41. Archiving - Compressing and Decompressing Files</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/41.-archiving-compress-and-decompress-files/</link>
      <pubDate>Wed, 13 Mar 2019 07:24:26 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/41.-archiving-compress-and-decompress-files/</guid>
      <description>&lt;p&gt;By compressing files and directories into a compressed file, we can easily move and back up the compressed file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>40. Find Utilities - Commands &amp; Files Searching Usages</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/40.-find-utilities-commands-files-searching-usages/</link>
      <pubDate>Tue, 12 Mar 2019 06:17:50 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/40.-find-utilities-commands-files-searching-usages/</guid>
      <description>&lt;p&gt;There are many things we can do with some combination of find and other commands. We can use some commands on the files we find.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>39. Find Utilities - Commands &amp; Files Searching Basics</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/39.-find-utilities-commands-files-searching-basics/</link>
      <pubDate>Mon, 11 Mar 2019 06:04:44 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/39.-find-utilities-commands-files-searching-basics/</guid>
      <description>&lt;p&gt;Linux provides us with tools that make it easy for us to find the location of files and commands quickly and efficiently.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>38. Processes - Running Jobs Management</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/38.-processes-running-jobs-management/</link>
      <pubDate>Sun, 10 Mar 2019 06:35:35 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/38.-processes-running-jobs-management/</guid>
      <description>&lt;p&gt;In linux, each running program will create at least one process in memory, and each process will be assigned a process ID, we can use the ID of the process to do the corresponding operation of a running program.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>37. Text Editor - Basic Usage of Nano</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/37.-text-editor-basic-usage-of-nano/</link>
      <pubDate>Sat, 09 Mar 2019 06:33:45 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/37.-text-editor-basic-usage-of-nano/</guid>
      <description>&lt;p&gt;By using the nano text editor provided by Linux, we can easily do some simple text editing operations such as adding, deleting, modifying, etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>36. System Context - Information</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/36.-system-context-information/</link>
      <pubDate>Fri, 08 Mar 2019 05:52:18 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/36.-system-context-information/</guid>
      <description>&lt;p&gt;Linux provides commands that allow you to view system-related information, and with these commands, you can quickly get some necessary system information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>35. System Context - Date</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/35.-system-context-date/</link>
      <pubDate>Fri, 08 Mar 2019 05:51:18 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/35.-system-context-date/</guid>
      <description>&lt;p&gt;Linux provides commands that allow you to view system&amp;rsquo;s date information, and with these commands, you can quickly get the date related information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>34. System Context - Time</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/34.-system-context-time/</link>
      <pubDate>Thu, 07 Mar 2019 07:35:44 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/34.-system-context-time/</guid>
      <description>&lt;p&gt;Linux provides commands that allow you to view system&amp;rsquo;s time information, and with these commands, you can quickly get the time related information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>33. Output Format - Prints Formatted Results</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/33.-output-format-prints-formatted-results/</link>
      <pubDate>Wed, 06 Mar 2019 08:03:56 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/33.-output-format-prints-formatted-results/</guid>
      <description>&lt;p&gt;Linux provides a printf command through which we can format what we want to output.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>32. Bash Shell - Startup Files</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/32.-bash-shell-startup-files/</link>
      <pubDate>Tue, 05 Mar 2019 07:37:52 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/32.-bash-shell-startup-files/</guid>
      <description>&lt;p&gt;Bash&amp;rsquo;s startup configuration file can help us pre-load some other script files as well as preset general and necessary variables.&lt;/p&gt;

&lt;p&gt;Bash provides two types of startup files, one that is loaded on login and the other that is loaded on non-login.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>31. Bash Shell - Expansions: Command, Arithmetic, Process Substitution</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/31.-bash-shell-expansions-command-arithmetic-process-substitution/</link>
      <pubDate>Mon, 04 Mar 2019 07:22:11 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/31.-bash-shell-expansions-command-arithmetic-process-substitution/</guid>
      <description>&lt;p&gt;Linux provides us with some expansions for command, arithmetic, addition and subtraction, comparison, ternary, assignment, and process substitution operations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>30. Bash Shell - Expansions: brace, tilde, parameter</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/30.-bash-shell-expansions-brace-tilde-parameter/</link>
      <pubDate>Sun, 03 Mar 2019 06:33:33 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/30.-bash-shell-expansions-brace-tilde-parameter/</guid>
      <description>&lt;p&gt;Linux provides us with some expansions for duplicate, print current user&amp;rsquo;s directory, and parameter operations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>29. Bash Shell - Variables Operations</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/29.-bash-shell-variables-operations/</link>
      <pubDate>Sat, 02 Mar 2019 07:07:52 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/29.-bash-shell-variables-operations/</guid>
      <description>&lt;p&gt;I believe that people who have learned how to program know what variables are, and at first it can be understood as an alias that points to the data stored in memory.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>28. Bash Shell - Most Commonly Used Control Operators</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/28.-bash-shell-most-commonly-used-control-operators/</link>
      <pubDate>Fri, 01 Mar 2019 07:47:10 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/28.-bash-shell-most-commonly-used-control-operators/</guid>
      <description>&lt;p&gt;We can use the control operators provided by linux to facilitate the use of commands and the processing of the results of command execution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>27. Bash Shell - Text Processing: tr</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/27.-bash-shell-text-processing-tr/</link>
      <pubDate>Thu, 28 Feb 2019 07:29:30 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/27.-bash-shell-text-processing-tr/</guid>
      <description>&lt;p&gt;We can use the tr command provided by linux to replace or remove text contents.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>26. Bash Shell - Text Processing: cut, paste, join</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/26.-bash-shell-text-processing-cut-paste-join/</link>
      <pubDate>Wed, 27 Feb 2019 06:55:58 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/26.-bash-shell-text-processing-cut-paste-join/</guid>
      <description>&lt;p&gt;We can use the cut, paste, join commands provided by linux to retrieve, duplicate, or merge text file contents.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>25. Bash Shell - Text Processing: uniq, comm</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/25.-bash-shell-text-processing-uniq-comm/</link>
      <pubDate>Tue, 26 Feb 2019 07:31:35 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/25.-bash-shell-text-processing-uniq-comm/</guid>
      <description>&lt;p&gt;We can use the uniq, comm command provided by linux to deduplicate, or compare text file contents.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>24. Bash Shell - Text Processing: wc, sort</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/24.-bash-shell-text-processing-wc-sort/</link>
      <pubDate>Mon, 25 Feb 2019 07:39:17 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/24.-bash-shell-text-processing-wc-sort/</guid>
      <description>&lt;p&gt;We can use the wc, sort command provided by Linux to count the number of words, the number of bytes, and the sort of letters and numbers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>23. Bash Shell - Text Processing: cat, tac, nl, head, tail</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/23.-bash-shell-text-processing-cat-tac-nl-head-tail/</link>
      <pubDate>Sun, 24 Feb 2019 08:52:48 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/23.-bash-shell-text-processing-cat-tac-nl-head-tail/</guid>
      <description>&lt;p&gt;With word processing commands, we can easily get the text we want from a text output or text document.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>22. Bash Shell - Pattern Matching (Globbing Wildcards)</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/22.-bash-shell-pattern-matching-globbing-wildcards/</link>
      <pubDate>Sat, 23 Feb 2019 11:20:55 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/22.-bash-shell-pattern-matching-globbing-wildcards/</guid>
      <description>&lt;p&gt;With the matching patterns, we can easily and efficiently find the files or directories we need.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>21. Pipelines - Use Other Commands&#39; Running Results</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/21.-pipelines-use-other-commands-running-results/</link>
      <pubDate>Fri, 22 Feb 2019 07:14:06 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/21.-pipelines-use-other-commands-running-results/</guid>
      <description>&lt;p&gt;With the pipe notation, we can pass the output of one program to the current as its initial data.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>20. Bash Shell - IO Redirection</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/20.-bash-shell-io-reirection/</link>
      <pubDate>Thu, 21 Feb 2019 06:27:53 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/20.-bash-shell-io-reirection/</guid>
      <description>&lt;p&gt;With the IO redirection feature, we can easily manipulate the input and output of files or other information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>19. Bash Shell - Command Prompt Settings Customization</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/19.-bash-shell-command-prompt-settings-customization/</link>
      <pubDate>Wed, 20 Feb 2019 07:42:28 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/19.-bash-shell-command-prompt-settings-customization/</guid>
      <description>Command Prompt Overview The command prompt looks like the following:
  Command prompt   View Settings of Current Command Prompt There are several ways we can view the settings for the command prompt.
$PS1 Variable We can get the command-line prompt setting by printing the environment variable $PS1:
1  echo $PS1     Command prompt   set Command 1  set | grep PS1     Command prompt   Command Prompt Settings Modification Temporarily Back Up the Original Settings Let&amp;rsquo;s temporarily back up the current command prompt settings:</description>
    </item>
    
    <item>
      <title>18. Bash Shell - Directory Stack Builtins</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/18.-bash-shell-directory-stack-builtins/</link>
      <pubDate>Tue, 19 Feb 2019 08:31:14 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/18.-bash-shell-directory-stack-builtins/</guid>
      <description>With a directory stack, we can push the directories we visit sequentially into the directory stack, and when we&amp;rsquo;ve done a series of operations, we can go all the way back to the origin based on the record of the directory stack.
Directory Stack Commands The directory stack provides us with three available commands.
dirs Displays all directories recorded in the directory stack:
1  help dirs     Check dirs&amp;#39;s definition and usage   pushd Records the specified directory to the directory stack and switches the working directory to the recorded directory:</description>
    </item>
    
    <item>
      <title>17. Bash Shell - Completion Commands</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/17.-bash-shell-completion-commands/</link>
      <pubDate>Mon, 18 Feb 2019 07:10:12 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/17.-bash-shell-completion-commands/</guid>
      <description>Most of the time, we can use commands efficiently with the help of Linux&amp;rsquo;s automatic completion capability.
TAB Completion Variable Tab 1  $HISTS # press Tab key to auto-complete this command     before completing     after completing   Command Tab 1  ec # press Tab key to auto-complete this command     before completing     after completing   File Tab 1  # press Tab key to auto-complete this command     before completing     after completing   Possible Completions Can we use Alt+Shift+?</description>
    </item>
    
    <item>
      <title>16. Bash Shell - Killing And Yanking</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/16.-bash-shell-killing-and-yanking/</link>
      <pubDate>Sun, 17 Feb 2019 09:35:21 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/16.-bash-shell-killing-and-yanking/</guid>
      <description>You can cut and paste text through the killing and yanking features provided by the bash shell.
Killing Text Forward We can use Ctrl K to cut the text behind the cursor:
1  Ctrl + K # press Control and K keys     before killing     after killing   Killing Text Backward We can use Ctrl U to cut the text before the cursor:</description>
    </item>
    
    <item>
      <title>15. Bash Shell - Text Manipulation</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/15.-bash-shell-text-manipulation/</link>
      <pubDate>Sat, 16 Feb 2019 08:05:01 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/15.-bash-shell-text-manipulation/</guid>
      <description>We usually need to change the display of some text, and these changes can be made through the text changing command.
Delete char We can use Ctrl + D to delete the character on the current cursor:
1  Ctrl + D # press Control and D keys     before manipulating     after manipulating   Backward delete char We can use Backspace to delete the character before the current cursor:</description>
    </item>
    
    <item>
      <title>14. Bash Shell - Cursor Movement</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/14.-bash-shell-cursor-movement/</link>
      <pubDate>Fri, 15 Feb 2019 07:52:08 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/14.-bash-shell-cursor-movement/</guid>
      <description>We can quickly move the cursor to a specific location with the shortcut key provided by the shell.
Move cursor to the new line We can move the cursor to the beginning of the new line:
1  Ctrl + C # press Control and C keys     before moving     after moving   Move cursor to the beginning We can move the cursor to the beginning of the line:</description>
    </item>
    
    <item>
      <title>13. Bourne and Bash Shells&#39; Environment Variables</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/13.-bourne-and-bash-shells-environment-variables/</link>
      <pubDate>Thu, 14 Feb 2019 08:17:49 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/13.-bourne-and-bash-shells-environment-variables/</guid>
      <description>The shell that Linux used in the first place was Bourne, and then Linux released Bash, which is an enhanced version of Bourne, and most Linux systems now use Bash by default.
Bourne Shell Variables Home and path are the two most commonly used bourne shell variables
HOME Current user&amp;rsquo;s home directory.
1  echo $HOME     prints current user&amp;#39;s home directory   PATH Paths of binary files, which are runnable programs.</description>
    </item>
    
    <item>
      <title>12. Bash Shell History Record Operations</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/12.-bash-shell-commands-history-record-usage/</link>
      <pubDate>Wed, 13 Feb 2019 07:10:22 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/12.-bash-shell-commands-history-record-usage/</guid>
      <description>With the command reuse feature of the bash shell, it is easy to use a previous command again or to see what commands we have recently used.
  Check history&amp;#39;s definition and usage   History File Location 1  echo $HISTFILE     the file that records the used commands   History Size 1 2  echo $HISTSIZE echo $HISTFILESIZE     these two commands show the amount of the lines of commands they can keep   History List 1  history     shows all recently used commands   Run Previous Command 1  !</description>
    </item>
    
    <item>
      <title>11. CentOS 7 - Bash Shell Auto Completion</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/11.-centos-7-bash-shell-auto-completion/</link>
      <pubDate>Tue, 12 Feb 2019 07:13:00 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/11.-centos-7-bash-shell-auto-completion/</guid>
      <description>CentOS does not install autocompletion support for all tools by default, so we need to install it manually.
Check If We Have Bash Completion Installed We can use the following command to verify:
1  yum list installed | grep completion   We won&amp;rsquo;t see any output if it hasn&amp;rsquo;t been installed, so we need to install this package:
Install 1  yum install bash-completion -y   Although it is installed, it has not yet been loaded into the running bash, so we need to use the source command to load them into the bash:</description>
    </item>
    
    <item>
      <title>10. Alias - A Linux Command for Shortcut Creation</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/10.-alias-a-linux-command-for-shortcut-creation/</link>
      <pubDate>Mon, 11 Feb 2019 07:08:31 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/10.-alias-a-linux-command-for-shortcut-creation/</guid>
      <description>Sometimes a frequently used Linux command can be very long, and when that happens, we need the alias command to help simplify the work of human input.
We can create aliases in two common ways, one for temporary aliases and the other for permanent aliases.
Let&amp;rsquo;s take a look at its help documentation:
1  help alias     Check alias&amp;#39;s definition and usage   We can use the alias command to view the shortcuts owned by current user:</description>
    </item>
    
    <item>
      <title>9. Text Editor - A Powerful Linux Text Editor&#39;s Basic Usage</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/9.-text-editor-a-powerful-linux-text-editors-basic-usage/</link>
      <pubDate>Sun, 10 Feb 2019 06:00:30 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/9.-text-editor-a-powerful-linux-text-editors-basic-usage/</guid>
      <description>Vim Text editor can efficiently help us quickly create or modify some common text type files, such as configuration files:
  Check vim&amp;#39;s definition and usage   Create File 1  vim newfile # After running the command, it&amp;#39;ll create an empty file called newfile     Create a new file   Command Mode Vim opens a file in command mode:
  Command mode   Help We can view the command-related help by the :help command:</description>
    </item>
    
    <item>
      <title>8. Linux Directory and File Management</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/8.-linux-directory-and-file-management/</link>
      <pubDate>Sat, 09 Feb 2019 10:56:58 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/8.-linux-directory-and-file-management/</guid>
      <description>Linux servers exist to process data efficiently, and files store data, so file management is critical. Directories manage files, so directory management is more crucial.
Let&amp;rsquo;s begin with the first one.
Print Current Working Directory Let&amp;rsquo;s take a look at the manual for the pwd command:
1  man pwd # pwd&amp;#39;s manual     Check pwd&amp;#39;s definition and usage   With this command, we know which directory we are currently working on:</description>
    </item>
    
    <item>
      <title>7. Types of Linux Commands</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/7.-types-of-linux-commands/</link>
      <pubDate>Fri, 08 Feb 2019 06:19:30 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/7.-types-of-linux-commands/</guid>
      <description>Type is a command to view command types. We can look at what types this command can see with the help of the help command:
  there are five types   Alias Alias is a shortcut to commands, such as ll is a simplified version of ls -l:
  the simplified version of ls -l   More&amp;hellip;
Keyword Shell has some reserved keywords, while is one of them:</description>
    </item>
    
    <item>
      <title>6. Linux Bash help, System man, info</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/6.-linux-bash-help-system-man-info/</link>
      <pubDate>Thu, 07 Feb 2019 07:12:39 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/6.-linux-bash-help-system-man-info/</guid>
      <description>Bash Help Command Let&amp;rsquo;s take a look at what bash is, and you can see it through whatis bash, apropos bash or man -k bash commands:
  bash is GNU&amp;#39;s Bourne-Again SHell   The builtins is actually a soft link to bash-builtins:
  builtins is a soft link to bash-builtins   So we can use man builtins, info builtins, man bash-builtins or info bash-builtins commands to view bash&amp;rsquo;s built-in commands:</description>
    </item>
    
    <item>
      <title>5. Linux Command Manual Page (man page)</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/5.-linux-command-manual-page-man-page/</link>
      <pubDate>Wed, 06 Feb 2019 07:11:06 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/5.-linux-command-manual-page-man-page/</guid>
      <description>With the power of the man page command, we can see what parameters a command accepts and how to use each parameter corresponding to the command. In this way, we are more efficient when using commands.
Page Sections Given the wide variety of commands, man solves the problem of command classification through section numbering.
1. User Commands Section (1) is used to categorise user commands.
Such as the date command we used earlier:</description>
    </item>
    
    <item>
      <title>4. Linux System and Hardware Times</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/4.-linux-system-and-hardware-times/</link>
      <pubDate>Tue, 05 Feb 2019 07:25:20 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/4.-linux-system-and-hardware-times/</guid>
      <description>In a Linux system, we can view the time of the system or the time of the underlying hardware.
Hardware Time We can view the time of the hardware by using the hwclock or clock command. We looked at the two commands separately through the ll command, and we learned that clock was a soft link to hwclock, so they were the same.
With the help of the man command, we know that hwclock is the command used by system administrators:</description>
    </item>
    
    <item>
      <title>3. Linux File Systems</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/3.-linux-file-systems/</link>
      <pubDate>Mon, 04 Feb 2019 06:41:44 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/3.-linux-file-systems/</guid>
      <description>Filesystem hierarchy standard is maintained by the Linux Foundation, which defines the structure and contents of directories in various distributions of Linux.
  Linux File System on CentOS 7 Distribution   File System Hierarchy File System Hierarchy
Let&amp;rsquo;s look at what each of these directories means and what types of files are suitable for each of them.
bin
Soft link of /usr/bin directory, those are users&amp;rsquo; executable binary files.</description>
    </item>
    
    <item>
      <title>2. Linux Installation</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/2.-linux-installation/</link>
      <pubDate>Sun, 03 Feb 2019 06:22:53 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/2.-linux-installation/</guid>
      <description>In the early days, the operating system could only be installed directly on hardware. As the technology matures, we can implement this in a variety of ways. It can now be installed on virtual machines, in local or cloud containers, or even through the App Store.
Install linux from a local container Docker is a very mature container technology, we can easily access the Linux image of each release by installing docker container technology on Windows and Mac.</description>
    </item>
    
    <item>
      <title>1. A brief introduction of Linux</title>
      <link>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/1.-introduction/</link>
      <pubDate>Sat, 02 Feb 2019 10:45:06 +1300</pubDate>
      
      <guid>https://dongchen.co/post/server-side-programming/linux/simple-but-profound/1.-introduction/</guid>
      <description>History Because at that time Linus after studying Minix source code discovered that Minix&amp;rsquo;s design is terrible. So he wrote a kernel from scratch, the Linux kernel, based on the assembly and c language he had accumulated as a child. It was later used by many kernel enthusiasts and vendors to develop release versions suitable for their preferences and needs.
C language is a high-level language, its efficiency is much faster than most of the current high-level languages, but the effectiveness of c language is 30% slower than assembly language.</description>
    </item>
    
  </channel>
</rss>